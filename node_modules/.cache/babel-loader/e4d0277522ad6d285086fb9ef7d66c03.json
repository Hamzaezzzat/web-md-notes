{"ast":null,"code":"import _objectSpread from \"/Applications/MAMP/htdocs/Learning/scrimbs/Section 4/notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Applications/MAMP/htdocs/Learning/scrimbs/Section 4/notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Applications/MAMP/htdocs/Learning/scrimbs/Section 4/notes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/Learning/scrimbs/Section 4/notes/src/App.js\";\nimport React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nexport default function App() {\n  /**\n   * Challenge:\n   * 1. Every time the `notes` array changes, save it\n   *    in localStorage. You'll need to use JSON.stringify()\n   *    to turn the array into a string to save in localStorage.\n   * 2. When the app first loads, initialize the notes state\n   *    with the notes saved in localStorage. You'll need to\n   *    use JSON.parse() to turn the stringified array back\n   *    into a real JS array.\n   */\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      notes = _React$useState2[0],\n      setNotes = _React$useState2[1];\n\n  var _React$useState3 = React.useState(notes[0] && notes[0].id || \"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      currentNoteId = _React$useState4[0],\n      setCurrentNoteId = _React$useState4[1];\n\n  function createNewNote() {\n    var newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(function (prevNotes) {\n      return [newNote].concat(_toConsumableArray(prevNotes));\n    });\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes(function (oldNotes) {\n      return oldNotes.map(function (oldNote) {\n        return oldNote.id === currentNoteId ? _objectSpread({}, oldNote, {\n          body: text\n        }) : oldNote;\n      });\n    });\n  }\n\n  function findCurrentNote() {\n    return notes.find(function (note) {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, notes.length > 0 ? /*#__PURE__*/React.createElement(Split, {\n    sizes: [30, 70],\n    direction: \"horizontal\",\n    className: \"split\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    notes: notes,\n    currentNote: findCurrentNote(),\n    setCurrentNoteId: setCurrentNoteId,\n    newNote: createNewNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }), currentNoteId && notes.length > 0 && /*#__PURE__*/React.createElement(Editor, {\n    currentNote: findCurrentNote(),\n    updateNote: updateNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"no-notes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, \"You have no notes\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"first-note\",\n    onClick: createNewNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Create one now\")));\n}","map":{"version":3,"names":["React","Sidebar","Editor","data","Split","nanoid","App","useState","notes","setNotes","id","currentNoteId","setCurrentNoteId","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","length"],"sources":["/Applications/MAMP/htdocs/Learning/scrimbs/Section 4/notes/src/App.js"],"sourcesContent":["import React from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\n\nexport default function App() {\n    /**\n     * Challenge:\n     * 1. Every time the `notes` array changes, save it\n     *    in localStorage. You'll need to use JSON.stringify()\n     *    to turn the array into a string to save in localStorage.\n     * 2. When the app first loads, initialize the notes state\n     *    with the notes saved in localStorage. You'll need to\n     *    use JSON.parse() to turn the stringified array back\n     *    into a real JS array.\n     */\n\n    const [notes, setNotes] = React.useState([]);\n    const [currentNoteId, setCurrentNoteId] = React.useState(\n        (notes[0] && notes[0].id) || \"\"\n    );\n\n    function createNewNote() {\n        const newNote = {\n            id: nanoid(),\n            body: \"# Type your markdown note's title here\",\n        };\n        setNotes((prevNotes) => [newNote, ...prevNotes]);\n        setCurrentNoteId(newNote.id);\n    }\n\n    function updateNote(text) {\n        setNotes((oldNotes) =>\n            oldNotes.map((oldNote) => {\n                return oldNote.id === currentNoteId\n                    ? { ...oldNote, body: text }\n                    : oldNote;\n            })\n        );\n    }\n\n    function findCurrentNote() {\n        return (\n            notes.find((note) => {\n                return note.id === currentNoteId;\n            }) || notes[0]\n        );\n    }\n\n    return (\n        <main>\n            {notes.length > 0 ? (\n                <Split\n                    sizes={[30, 70]}\n                    direction=\"horizontal\"\n                    className=\"split\"\n                >\n                    <Sidebar\n                        notes={notes}\n                        currentNote={findCurrentNote()}\n                        setCurrentNoteId={setCurrentNoteId}\n                        newNote={createNewNote}\n                    />\n                    {currentNoteId && notes.length > 0 && (\n                        <Editor\n                            currentNote={findCurrentNote()}\n                            updateNote={updateNote}\n                        />\n                    )}\n                </Split>\n            ) : (\n                <div className=\"no-notes\">\n                    <h1>You have no notes</h1>\n                    <button className=\"first-note\" onClick={createNewNote}>\n                        Create one now\n                    </button>\n                </div>\n            )}\n        </main>\n    );\n}\n"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,eAAe,SAASC,GAAT,GAAe;EAC1B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAV8B,sBAYAN,KAAK,CAACO,QAAN,CAAe,EAAf,CAZA;EAAA;EAAA,IAYnBC,KAZmB;EAAA,IAYZC,QAZY;;EAAA,uBAagBT,KAAK,CAACO,QAAN,CACrCC,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASE,EAAtB,IAA6B,EADS,CAbhB;EAAA;EAAA,IAanBC,aAbmB;EAAA,IAaJC,gBAbI;;EAiB1B,SAASC,aAAT,GAAyB;IACrB,IAAMC,OAAO,GAAG;MACZJ,EAAE,EAAEL,MAAM,EADE;MAEZU,IAAI,EAAE;IAFM,CAAhB;IAIAN,QAAQ,CAAC,UAACO,SAAD;MAAA,QAAgBF,OAAhB,4BAA4BE,SAA5B;IAAA,CAAD,CAAR;IACAJ,gBAAgB,CAACE,OAAO,CAACJ,EAAT,CAAhB;EACH;;EAED,SAASO,UAAT,CAAoBC,IAApB,EAA0B;IACtBT,QAAQ,CAAC,UAACU,QAAD;MAAA,OACLA,QAAQ,CAACC,GAAT,CAAa,UAACC,OAAD,EAAa;QACtB,OAAOA,OAAO,CAACX,EAAR,KAAeC,aAAf,qBACIU,OADJ;UACaN,IAAI,EAAEG;QADnB,KAEDG,OAFN;MAGH,CAJD,CADK;IAAA,CAAD,CAAR;EAOH;;EAED,SAASC,eAAT,GAA2B;IACvB,OACId,KAAK,CAACe,IAAN,CAAW,UAACC,IAAD,EAAU;MACjB,OAAOA,IAAI,CAACd,EAAL,KAAYC,aAAnB;IACH,CAFD,KAEMH,KAAK,CAAC,CAAD,CAHf;EAKH;;EAED,oBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKA,KAAK,CAACiB,MAAN,GAAe,CAAf,gBACG,oBAAC,KAAD;IACI,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,CADX;IAEI,SAAS,EAAC,YAFd;IAGI,SAAS,EAAC,OAHd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAKI,oBAAC,OAAD;IACI,KAAK,EAAEjB,KADX;IAEI,WAAW,EAAEc,eAAe,EAFhC;IAGI,gBAAgB,EAAEV,gBAHtB;IAII,OAAO,EAAEC,aAJb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALJ,EAWKF,aAAa,IAAIH,KAAK,CAACiB,MAAN,GAAe,CAAhC,iBACG,oBAAC,MAAD;IACI,WAAW,EAAEH,eAAe,EADhC;IAEI,UAAU,EAAEL,UAFhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAZR,CADH,gBAoBG;IAAK,SAAS,EAAC,UAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,uBADJ,eAEI;IAAQ,SAAS,EAAC,YAAlB;IAA+B,OAAO,EAAEJ,aAAxC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,oBAFJ,CArBR,CADJ;AA+BH"},"metadata":{},"sourceType":"module"}